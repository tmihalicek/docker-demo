services:
  postgres:
    image: postgres:17.5-bookworm
    restart: unless-stopped
    # # step 2: Hardening by removing unnecessary port
    # ports:
    #   - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        tag: docker-postgres
        max-size: "10m"
        max-file: "3"
  postgresbackup:
    image: prodrigestivill/postgres-backup-local:17
    user: 1001:1001
    restart: unless-stopped
    volumes:
      - ./backups:/backups
    depends_on:
      postgres:
        condition: service_healthy
      vaultwarden:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z1 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_ON_START=TRUE
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=1
      - HEALTHCHECK_PORT=8080
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        tag: docker-postgresbackup
        max-size: "10m"
        max-file: "3"
  vaultwarden:
    image: vaultwarden/server:1.34.3
    restart: unless-stopped
    volumes:
      - app-data:/data/
    environment:
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - DOMAIN=${DOMAIN}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    # # step 2: Hardening by removing unnecessary port
    # ports:
    #   - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        tag: docker-app
        max-size: "10m"
        max-file: "3"
  # # step 1: Adding container nginx web server
  # nginx:
  #   image: nginx:1.29.1-bookworm-perl
  #   restart: unless-stopped
  #   volumes:
  #     - ./web/nginx.conf:/etc/nginx/conf.d/vaultwarden.conf:ro
  #     - ./web/crts/:/etc/nginx/crts/:ro
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   command: ["nginx", "-g", "daemon off;"]
  #   depends_on:
  #     vaultwarden:
  #       condition: service_healthy
  #   logging:
  #     driver: json-file
  #     options:
  #       tag: docker-web
  #       max-size: "10m"
  #       max-file: "3"
volumes:
  db-data:
    name: db-data
  app-data:
    name: app-data
