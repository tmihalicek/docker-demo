# Hide Nginx version in headers
server_tokens off;

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name web.test.org;

    return 301 https://$host$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name web.test.org;

    # SSL Certificates
    ssl_certificate     /etc/nginx/crts/certificate.crt;
    ssl_certificate_key /etc/nginx/crts/certificate.key;

    # SSL Protocols & Ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384';
    ssl_prefer_server_ciphers on;

    # Session Resumption (Performance)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

    # Disable TLS 1.3 Early Data
    ssl_early_data off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Max upload size
    client_max_body_size 128M;

    # Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 90s;

    location / {
        proxy_pass http://vaultwarden:80;
    }
}
